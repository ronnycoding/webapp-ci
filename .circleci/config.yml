version: 2

references:
  container_config: &container_config
    working_directory: ~/tmp
    docker:
      - image: circleci/node:8.15.1
  add_workspace: &add_workspace
    attach_workspace:
      at: .
  app_deploy: &app_deploy
    steps:
      - *add_workspace
      - deploy:
          name: Deploy app
          command: |
            echo "enviroment $RELEASE_CHANNEL"

jobs:
  checkout:
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Check yarn version
          command: yarn --version
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - .
  lint:
    <<: *container_config
    steps:
      - *add_workspace
      - run:
          name: Run eslint
          command: yarn lint
      - run:
          name: Run stylelint
          command: yarn stylelint
      - run:
          name: Run flow type check
          command: yarn flow
  test:
    <<: *container_config
    steps:
      - *add_workspace
      - run:
          name: Run tests
          command: yarn test
  deploy-react-app-pull-request:
    <<: *container_config
    environment:
      RELEASE_CHANNEL: pull-request
    <<: *app_deploy
  deploy-react-app-staging:
    <<: *container_config
    environment:
      RELEASE_CHANNEL: staging
    <<: *app_deploy
  deploy-react-app-production:
    <<: *container_config
    environment:
      RELEASE_CHANNEL: default
    <<: *app_deploy

workflows:
  version: 2
  deploy:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
      - approve-deploy-pull-request:
          type: approval
          filters:
            branches:
              ignore: master
      - deploy-react-app-pull-request:
          requires:
            - lint
            - test
            - approve-deploy-pull-request
          filters:
            branches:
              ignore: master
      - deploy-react-app-staging:
          requires:
            - lint
            - test
          filters:
            branches:
              only: master
      - approve-deploy:
          type: approval
          requires:
            - deploy-react-app-staging
          filters:
            branches:
              only: master
      - deploy-react-app-production:
          requires:
            - approve-deploy
          filters:
            branches:
              only: master
